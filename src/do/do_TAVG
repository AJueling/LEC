#!/bin/csh -f
#
# This script averages multiple monthly average output files to create e.g. yearly averages.
# This script is heavily adapted from the Atlantic salt budget time series script.
# 
set inputdir  = "/projects/0/samoc/pop/tx0.1/output/run_henk_mixedbc/tavg/"
set outputdir = "/projects/0/samoc/jan/Andree/"
set filebase  = "t.t0.1_42l_nccs01."
set filebase2 = "t.t0.1_42l_nccs01.tavg.year."

# timeseries info
# (data for extravars-case only exists for 026903-027001 at the moment;
# the file that contains a certain month is written on the 1st day of the next month;
# so the month in inputfilename is always 1 month up front
# e.g. t.t0.1_42l_nccs01.012002 contains January year 120;
# this means data is available for 02-269 to 12-269)

set startyear  = $argv[1]
set startmonth = 2
@   endyear    = $startyear + 1
set endmonth   = 1

ifort -O3 -convert big_endian -o TAVG_BIN_EXT_$startyear TAVG_BIN_EXT.f90# -lnetcdf -lnetcdff

set new_file_name = $filebase2${startyear}

@ tavg_len = 12 * ( $endyear - $startyear ) + $endmonth - $startmonth + 1 

if ( $tavg_len<1 ) then
  echo "invalid time series boundaries"
endif

echo "$tavg_len"                 > in_list_$startyear

echo "3600,2400"                >> in_list_$startyear

echo "$outputdir$new_file_name" >> in_list_$startyear

set t = 0
while ( $t < $tavg_len )
  @ y = $startyear + ( $startmonth + $t - 1 ) / 12
  @ m = ($startmonth + $t ) % 12 
  if ( $m == 0 ) then
    @ m = $m + 12
  endif 
  set y_str = `echo $y | awk '{printf("%04d\n",$0)}'`
  set m_str = `echo $m | awk '{printf("%02d\n",$0)}'`
  set bin_file = $inputdir$filebase${y_str}${m_str}
  echo "$bin_file"
  echo "$bin_file"              >> in_list_$startyear

  set size = `stat --printf="%s" $bin_file`
  if ( $size == 11923200000 ) then
    set nrecs = 345
  else if ( $size == 14826240000 ) then
    set nrecs = 429
  endif
  echo "$nrecs"                 >> in_list_$startyear
  @ t = $t + 1
end  

./TAVG_BIN_EXT_$startyear < in_list_$startyear

rm in_list_$startyear
rm TAVG_BIN_EXT_$startyear
echo "Time averaging successfully done."
